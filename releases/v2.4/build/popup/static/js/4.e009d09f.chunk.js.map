{"version":3,"sources":["img/cookie.svg","components/Cookies/NoCookies.tsx","components/Styles.tsx","components/Cookies/CookiesOverview.tsx","components/Formik/Schema.tsx","components/Formik/CookieForm.tsx","components/Cookies/EditCookie.tsx","components/Cookies/List/CookieItem.tsx","components/Divider.tsx","components/Cookies/List/DomainDetails.tsx","components/Cookies/List/Domains.tsx","components/Cookies/List/MainScreen.tsx"],"names":["module","exports","NoCookies","newCookie","Grid","container","direction","justify","alignItems","className","src","CookieImg","alt","Typography","variant","color","Button","size","onClick","useDomainGroupsStyles","makeStyles","theme","createStyles","heading","fontSize","typography","pxToRem","marginBottom","useDomainStyles","root","transition","marginRight","secondaryHeading","marginTop","palette","text","secondary","secondaryHeadingSize","marginLeft","position","icon","verticalAlign","height","width","details","backgroundColor","columnPrimary","flexBasis","columnSecondary","helper","borderLeft","divider","padding","spacing","link","primary","main","textDecoration","useCookieStyles","showMore","cursor","cookiesSize","cookiesSecondaryColor","useCookieItemStyles","iconButton","itemMenu","minHeight","menuTitle","margin","useEditCookieStyles","flexGrow","getHeaderCol","formControl","minWidth","selectEmpty","num","one","more","Overview","cookies","clearAllCookies","classes","totalCookiesSize","humanReadableSize","sum","map","c","split","totalCookies","length","totalDomains","Paper","item","SAME_SITE_STATUS","CookieSchema","Yup","shape","domain","required","default","notOneOf","name","value","hostOnly","path","secure","sameSite","oneOf","session","expirationDate","expirationDateString","storeId","firstPartyDomain","httpOnly","CookieForm","cookie","url","clearCookie","firstInputRef","useRef","useState","isSession","setSessionCookie","isHostOnly","setHostOnlyCookie","useEffect","node","current","focus","focusInput","cookieOnClick","values","actions","a","setSubmitting","currentTab","currentURL","formatNewCookie","console","log","browser","remove","then","set","e","handleSessionChange","callback","prev","initialValues","getURL","getExpirationDateString","onSubmit","validationSchema","formikProps","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","TextField","ref","id","disabled","onChange","onBlur","label","defaultValue","fullWidth","error","Boolean","helperText","FormControlLabel","control","Checkbox","checked","type","InputLabelProps","shrink","FormControl","InputLabel","Select","labelId","index","MenuItem","key","Header","React","memo","useContext","StoreContext","state","setState","CookieItem","deleteCookie","setGlobalState","anchorEl","setAnchorEl","handleClose","useCallback","handleCopy","copy","handleEditCookie","editCookie","withValue","xs","expirationMessage","InputProps","readOnly","formatedSize","isEmpty","badges","badge","badgeName","warning","IconButton","aria-label","aria-controls","aria-haspopup","component","event","currentTarget","Menu","open","onClose","Divider","DomainDetails","search","setSearch","filteredCookies","filter","toLower","includes","mappedCookies","domainCookie","target","Domains","domains","clearAllDomainCookies","ExpansionPanel","TransitionProps","unmountOnExit","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ExpansionPanelActions","MainScreen","globalStore","setGlobalStore","getAllCookies","next","allCookies","reduce","loading","currentUrl","getCurrentUrlFromTab","currentDomain","getCurrentDomainFromUrl","groupedDomains","groupBy","domainCookies","showGroups","others","itemsOrEmptyArray","list","EditCookie"],"mappings":"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","file":"static/js/4.e009d09f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cookie.aa073a0f.svg\";","import React from 'react';\n\n// Material UI\nimport { Grid, Typography, Button } from '@material-ui/core';\n\n// Images\nimport CookieImg from 'img/cookie.svg';\n\ntype NoCookiesProps = {\n  newCookie: () => void;\n};\n\nconst NoCookies: React.FC<NoCookiesProps> = ({ newCookie }) => {\n  return (\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"center\">\n      <div className=\"img-wrapper\">\n        <img src={CookieImg} className=\"no-cookies-img\" alt=\"No Cookies\" />\n      </div>\n      <div className=\"no-cookies-typo\">\n        <Typography variant=\"h5\" color=\"textSecondary\">\n          No Cookies\n        </Typography>\n      </div>\n      <Button size=\"small\" onClick={newCookie}>\n        ADD\n      </Button>\n    </Grid>\n  );\n};\n\nexport default NoCookies;\n","import { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\n\nexport const useDomainGroupsStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      fontSize: theme.typography.pxToRem(13),\n      color: 'white',\n      marginBottom: '8px',\n    },\n  })\n);\n\nexport const useDomainStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      transition: 'null',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      marginRight: '25px',\n    },\n    secondaryHeading: {\n      marginTop: 2,\n      fontSize: theme.typography.pxToRem(13),\n      color: theme.palette.text.secondary,\n    },\n    secondaryHeadingSize: {\n      fontSize: theme.typography.pxToRem(11),\n      color: theme.palette.text.secondary,\n      marginTop: 2,\n      marginLeft: 5,\n      position: 'absolute',\n    },\n    icon: {\n      verticalAlign: 'bottom',\n      height: 20,\n      width: 20,\n    },\n    details: {\n      alignItems: 'center',\n      backgroundColor: 'rgba(43, 47, 50, 0.55)',\n    },\n    columnPrimary: {\n      flexBasis: '50%',\n    },\n    columnSecondary: {\n      flexBasis: '16%',\n    },\n    helper: {\n      borderLeft: `2px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1, 2),\n    },\n    link: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n  })\n);\n\nexport const useDomainDetails = makeStyles((theme: Theme) =>\n  createStyles({\n    showMore: {\n      cursor: 'pointer',\n      marginTop: '10px',\n      marginBottom: '-5px',\n      fontSize: theme.typography.pxToRem(14),\n    },\n  })\n);\n\nexport const useCookieStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cookiesSize: {\n      fontSize: theme.typography.pxToRem(16),\n    },\n    cookiesSecondaryColor: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(14),\n    },\n  })\n);\n\nexport const useCookieItemStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    iconButton: {\n      height: 25,\n      marginTop: 16,\n      marginLeft: 10,\n    },\n    itemMenu: {\n      fontSize: theme.typography.pxToRem(14),\n      minHeight: 40,\n    },\n    menuTitle: {\n      fontSize: theme.typography.pxToRem(12),\n      margin: '0 0 0 10px',\n    },\n  })\n);\n\nexport const useEditCookieStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    cookiesSize: {\n      fontSize: theme.typography.pxToRem(16),\n    },\n    cookiesSecondaryColor: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(14),\n    },\n  })\n);\n\nexport const cookieFormStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n","import React from 'react';\nimport { TypeCookiesState } from 'types/GlobalTypes';\nimport { Paper, Typography, Grid, Button } from '@material-ui/core';\nimport sum from 'ramda/es/sum';\nimport { humanReadableSize } from 'helpers/CookieHelper';\nimport { useCookieStyles } from 'components/Styles';\n\nconst getHeaderCol = (\n  num: number | string,\n  one: string,\n  more: string,\n  className: any\n) => (\n  <span>\n    {num} <span className={className}>{num === 1 ? one : more}</span>\n  </span>\n);\n\ntype OverviewProps = {\n  cookies: TypeCookiesState;\n  clearAllCookies: () => void;\n  newCookie: () => void;\n};\n\nconst Overview: React.FC<OverviewProps> = ({\n  cookies,\n  clearAllCookies,\n  newCookie,\n}) => {\n  const classes = useCookieStyles({});\n\n  const totalCookiesSize = humanReadableSize(\n    sum(cookies.map(c => c.size))\n  ).split(' ');\n  const totalCookies = sum(cookies.map(c => c.cookies.length));\n  const totalDomains = cookies.length;\n\n  return (\n    <Paper className=\"overview panel-padding\">\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <div>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            spacing={1}\n          >\n            <Grid item>\n              <Typography className={classes.cookiesSize}>\n                {getHeaderCol(\n                  totalDomains,\n                  'domain',\n                  'domains',\n                  classes.cookiesSecondaryColor\n                )}\n              </Typography>\n            </Grid>\n            ~\n            <Grid item>\n              <Typography className={classes.cookiesSize}>\n                {getHeaderCol(\n                  totalCookies,\n                  'cookie',\n                  'cookies',\n                  classes.cookiesSecondaryColor\n                )}\n              </Typography>\n            </Grid>\n            ~\n            <Grid item>\n              <Typography className={classes.cookiesSize}>\n                {getHeaderCol(\n                  totalCookiesSize[0],\n                  '',\n                  totalCookiesSize[1],\n                  classes.cookiesSecondaryColor\n                )}\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n        <div>\n          <Button size=\"small\" onClick={newCookie}>\n            ADD\n          </Button>\n          <Button size=\"small\" onClick={clearAllCookies}>\n            Clear All\n          </Button>\n        </div>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Overview;\n","import * as Yup from 'yup';\nimport { FormikHelpers } from 'formik';\n\nexport const SAME_SITE_STATUS = [\n  'no_restriction',\n  'lax',\n  'strict',\n  'unspecified',\n];\n\nconst CookieSchema = Yup.object().shape({\n  domain: Yup.string()\n    .required()\n    .default('')\n    .notOneOf(['newtab']),\n  name: Yup.string().required(),\n  value: Yup.string(),\n  hostOnly: Yup.boolean().default(false),\n  path: Yup.string().default('/'),\n  secure: Yup.boolean().default(false),\n  sameSite: Yup.string()\n    .oneOf(SAME_SITE_STATUS)\n    .default(SAME_SITE_STATUS[0]),\n  session: Yup.boolean().default(false),\n  expirationDate: Yup.number(),\n  expirationDateString: Yup.string(),\n  storeId: Yup.string(),\n  firstPartyDomain: Yup.string(),\n  httpOnly: Yup.boolean().default(false),\n});\n\nexport type ICookieSchema = Yup.InferType<typeof CookieSchema>;\n\nexport type ICookieOnClick = (\n  values: ICookieSchema,\n  actions: FormikHelpers<ICookieSchema>\n) => void;\n\nexport default CookieSchema;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { TypeExtendedCookie } from 'types/GlobalTypes';\nimport { Formik } from 'formik';\nimport CookieSchema, {\n  ICookieOnClick,\n  ICookieSchema,\n  SAME_SITE_STATUS,\n} from 'components/Formik/Schema';\nimport {\n  TextField,\n  Button,\n  Grid,\n  Paper,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport {\n  getURL,\n  getExpirationDateString,\n  formatNewCookie,\n  currentTab,\n} from 'helpers/CookieHelper';\nimport { browser } from 'webextension-polyfill-ts';\n\ntype CookieFormProps = {\n  cookie: TypeExtendedCookie | null;\n  url: string | null;\n  clearCookie: () => void;\n};\n\nconst CookieForm: React.FC<CookieFormProps> = ({\n  cookie,\n  url,\n  clearCookie,\n}) => {\n  const firstInputRef = useRef<HTMLInputElement>(null);\n  const [isSession, setSessionCookie] = useState(false);\n  const [isHostOnly, setHostOnlyCookie] = useState(false);\n\n  const focusInput = () => {\n    const node = firstInputRef.current;\n    if (node) node.focus();\n  };\n\n  useEffect(() => {\n    focusInput();\n  }, []);\n\n  const cookieOnClick: ICookieOnClick = async (values, actions) => {\n    actions.setSubmitting(false);\n    const currentURL = await currentTab();\n    // @ts-ignore\n    const newCookie = formatNewCookie(values, currentURL.url);\n    console.log('FINAL COOKIE', newCookie);\n    if (!cookie || cookie.name !== newCookie.name) {\n      browser.cookies.set(newCookie).then(e => {\n        console.log('FIN', e);\n        clearCookie();\n      });\n    } else {\n      browser.cookies\n        .remove({\n          url: currentURL.url!,\n          name: cookie.name,\n          storeId: cookie.storeId,\n        })\n        .then(() => {\n          browser.cookies.set(newCookie).then(e => {\n            console.log('FIN', e);\n            clearCookie();\n          });\n        });\n    }\n  };\n\n  const handleSessionChange = (\n    callback: (ev: React.ChangeEvent<any>) => void\n  ) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSessionCookie(prev => !prev);\n    callback(e);\n  };\n\n  const handleHostOnlyChange = (\n    callback: (ev: React.ChangeEvent<any>) => void\n  ) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    setHostOnlyCookie(prev => !prev);\n    callback(e);\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={\n          cookie\n            ? (cookie! as ICookieSchema)\n            : {\n                ...CookieSchema.default(),\n                domain: getURL(url),\n                expirationDateString: getExpirationDateString(),\n              }\n        }\n        onSubmit={cookieOnClick}\n        validationSchema={CookieSchema}\n      >\n        {formikProps => {\n          const {\n            values,\n            touched,\n            errors,\n            //dirty,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            // setFieldValue,\n            // handleReset\n          } = formikProps;\n          return (\n            <form onSubmit={handleSubmit}>\n              <div className=\"cookie-form\">\n                <TextField\n                  ref={firstInputRef}\n                  id=\"domain\"\n                  disabled={isHostOnly}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  label=\"Domain\"\n                  defaultValue={values.domain}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  error={Boolean(errors.domain && touched.domain)}\n                  helperText={\n                    errors.domain &&\n                    touched.domain && <span>Required field</span>\n                  }\n                />\n                <TextField\n                  id=\"name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  label=\"Key\"\n                  defaultValue={values.name}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  error={Boolean(errors.name && touched.name)}\n                  helperText={\n                    errors.name && touched.name && <span>Required field</span>\n                  }\n                />\n                <TextField\n                  id=\"value\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  label=\"Value\"\n                  defaultValue={values.value}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  error={Boolean(errors.value && touched.value)}\n                  helperText={\n                    errors.value && touched.value && <span>Required field</span>\n                  }\n                />\n                <TextField\n                  id=\"path\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  label=\"Path\"\n                  defaultValue={values.path}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  error={Boolean(errors.path && touched.path)}\n                  helperText={\n                    errors.path && touched.path && <span>Required field</span>\n                  }\n                />\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"flex-start\"\n                >\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        id=\"secure\"\n                        checked={values.secure}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.secure}\n                        color=\"primary\"\n                      />\n                    }\n                    label={<span className=\"checkbox-color\">Secure</span>}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        id=\"httpOnly\"\n                        checked={values.httpOnly}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.httpOnly}\n                        color=\"primary\"\n                      />\n                    }\n                    label={<span className=\"checkbox-color\">HttpOnly</span>}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        id=\"hostOnly\"\n                        checked={values.hostOnly}\n                        onChange={handleHostOnlyChange(handleChange)}\n                        onBlur={handleBlur}\n                        value={values.hostOnly}\n                        color=\"primary\"\n                      />\n                    }\n                    label={<span className=\"checkbox-color\">HostOnly</span>}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        id=\"session\"\n                        checked={values.session}\n                        onChange={handleSessionChange(handleChange)}\n                        onBlur={handleBlur}\n                        value={values.session}\n                        color=\"primary\"\n                      />\n                    }\n                    label={<span className=\"checkbox-color\">Session</span>}\n                  />\n                </Grid>\n                {!isSession && (\n                  <TextField\n                    fullWidth\n                    id=\"expirationDateString\"\n                    label=\"Expiration Date\"\n                    type=\"datetime-local\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.expirationDateString}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                )}\n                <FormControl margin=\"dense\" className=\"full-width\">\n                  <InputLabel id=\"sameSite-label\">SameSite</InputLabel>\n                  <Select\n                    labelId=\"sameSite-label\"\n                    id=\"sameSite\"\n                    value={values.sameSite}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  >\n                    {SAME_SITE_STATUS.map((name, index) => (\n                      <MenuItem key={index} value={name}>\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </div>\n              <Paper className=\"panel-padding\">\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  <Button type=\"submit\" size=\"small\" disabled={isSubmitting}>\n                    {cookie ? 'SAVE' : 'ADD'}\n                  </Button>\n                </Grid>\n              </Paper>\n            </form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default CookieForm;\n","import React, { useContext } from 'react';\nimport { StoreContext } from 'store/GlobalStore';\nimport { Grid, Paper, Typography, Button } from '@material-ui/core';\nimport { useEditCookieStyles } from 'components/Styles';\nimport { TypeExtendedCookie } from 'types/GlobalTypes';\nimport CookieForm from 'components/Formik/CookieForm';\n\ntype HeaderProps = { cookie: TypeExtendedCookie; clearCookie: () => void };\n\nconst Header: React.FC<HeaderProps> = React.memo(({ cookie, clearCookie }) => {\n  const classes = useEditCookieStyles({});\n\n  return (\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n      <div>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          {cookie ? (\n            <Grid item>\n              <Typography className={classes.cookiesSize}>\n                Cookie ( \"{cookie.name}\" ){' '}\n                <span className={classes.cookiesSecondaryColor}>\n                  {' '}\n                  - Domain ( \"{cookie.domain}\" )\n                </span>\n              </Typography>\n            </Grid>\n          ) : (\n            <Grid item>\n              <Typography className={classes.cookiesSecondaryColor}>\n                New Cookie\n              </Typography>\n            </Grid>\n          )}\n        </Grid>\n      </div>\n      <div>\n        <Button size=\"small\" onClick={clearCookie}>\n          Cancel\n        </Button>\n      </div>\n    </Grid>\n  );\n});\n\nconst Overview: React.FC = () => {\n  const { state, setState } = useContext(StoreContext);\n\n  if (!state.cookie && !state.newCookie) return null;\n\n  return (\n    <div>\n      <Paper className=\"panel-padding\">\n        <Header cookie={state.cookie!} clearCookie={setState.clearCookie} />\n      </Paper>\n      <CookieForm\n        cookie={state.cookie}\n        // @ts-ignore\n        url={state.currentTab.url as string}\n        clearCookie={setState.clearCookie}\n      />\n    </div>\n  );\n};\n\nexport default Overview;\n","import React, { useState, useContext, useCallback } from 'react';\nimport copy from 'copy-to-clipboard';\n\n// Material UI\nimport {\n  TextField,\n  MenuItem,\n  IconButton,\n  Grid,\n  Menu,\n  Divider,\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n// Helpers\nimport { isEmpty } from 'ramda';\n\n// Types\nimport { TypeExtendedCookie } from 'types/GlobalTypes';\nimport { StoreContext } from 'store/GlobalStore';\nimport { useCookieItemStyles } from 'components/Styles';\n\ntype CookieItemProps = {\n  cookie: TypeExtendedCookie;\n  deleteCookie: (cookie: TypeExtendedCookie) => Promise<void>;\n};\n\nconst CookieItem = ({ cookie, deleteCookie }: CookieItemProps) => {\n  const { setState: setGlobalState } = useContext(StoreContext);\n  const classes = useCookieItemStyles({});\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDeleteCookie = () => {\n    deleteCookie(cookie);\n    setAnchorEl(null);\n  };\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleCopy = useCallback(\n    (value: string) => {\n      copy(value);\n      handleClose();\n    },\n    [handleClose]\n  );\n\n  const handleEditCookie = useCallback(() => {\n    setGlobalState.editCookie(cookie);\n    handleClose();\n  }, [cookie, handleClose, setGlobalState]);\n\n  const withValue = Boolean(cookie.value);\n\n  return (\n    <div className=\"cookie-list-item\">\n      <Grid container spacing={1}>\n        <Grid item xs={withValue ? 4 : 11}>\n          <TextField\n            label=\"Key\"\n            defaultValue={cookie.name}\n            helperText={\n              cookie.expirationMessage && (\n                <span>\n                  <span className=\"opacity-50\">Age: </span>\n                  <span\n                    className={`${cookie.session &&\n                      'badge cookie-item-session'}`}\n                  >\n                    {cookie.expirationMessage}\n                  </span>\n                </span>\n              )\n            }\n            margin=\"dense\"\n            variant=\"outlined\"\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Grid>\n        {withValue && (\n          <Grid item xs={7}>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"flex-start\"\n              alignItems=\"flex-end\"\n              spacing={0}\n            >\n              <TextField\n                label={cookie.value ? 'Value' : 'No value'}\n                defaultValue={cookie.value}\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  readOnly: true,\n                }}\n                helperText={\n                  <span>\n                    <span className=\"opacity-50\">Size: </span>\n                    <span>{cookie.formatedSize}</span>\n                  </span>\n                }\n              />\n              {!isEmpty(cookie.badges) && (\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"flex-start\"\n                  className=\"badge-wrapper\"\n                >\n                  {cookie.badges.map(badge => (\n                    <div\n                      key={badge.badgeName}\n                      className={`badge ${badge.warning && 'badge-warning'}`}\n                    >\n                      {badge.badgeName}\n                    </div>\n                  ))}\n                </Grid>\n              )}\n            </Grid>\n          </Grid>\n        )}\n        <IconButton\n          aria-label=\"Edit Cookie\"\n          aria-controls={cookie.name}\n          aria-haspopup=\"true\"\n          component=\"span\"\n          size=\"small\"\n          className={classes.iconButton}\n          onClick={handleClick}\n        >\n          <NavigateNextIcon />\n        </IconButton>\n        <Menu\n          id={cookie.name}\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem className={classes.itemMenu} onClick={handleEditCookie}>\n            Edit\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            className={classes.itemMenu}\n            onClick={() => handleCopy(cookie.name)}\n          >\n            Copy \"name\"\n          </MenuItem>\n          {cookie.value && (\n            <MenuItem\n              className={classes.itemMenu}\n              onClick={() => handleCopy(cookie.value)}\n            >\n              Copy \"value\"\n            </MenuItem>\n          )}\n          <Divider />\n          <MenuItem className={classes.itemMenu} onClick={handleDeleteCookie}>\n            Delete\n          </MenuItem>\n        </Menu>\n      </Grid>\n    </div>\n  );\n};\n\nexport default CookieItem;\n","import React from 'react';\n\nconst Divider = () => {\n  return <div className=\"divider\"></div>;\n};\n\nexport default Divider;\n","import React, { useState } from 'react';\nimport { TypeCookieState, TypeExtendedCookie } from 'types/GlobalTypes';\nimport { Grid, TextField } from '@material-ui/core';\nimport CookieItem from 'components/Cookies/List/CookieItem';\nimport { toLower, isEmpty } from 'ramda';\nimport Divider from 'components/Divider';\n\ntype DomainDetailsProps = {\n  cookie: TypeCookieState;\n  deleteCookie: (cookie: TypeExtendedCookie) => Promise<void>;\n};\n\nconst DomainDetails = ({\n  cookie: { cookies },\n  deleteCookie,\n}: DomainDetailsProps) => {\n  const [search, setSearch] = useState('');\n\n  const filteredCookies = isEmpty(search)\n    ? cookies\n    : cookies.filter(c => toLower(c.name).includes(search));\n\n  const mappedCookies = filteredCookies.map(domainCookie => (\n    <CookieItem\n      key={domainCookie.name}\n      cookie={domainCookie}\n      deleteCookie={deleteCookie}\n    />\n  ));\n\n  return (\n    <Grid container spacing={0}>\n      {!(cookies.length === 1) && (\n        <div className=\"search-bar\">\n          <Grid item>\n            <TextField\n              label=\"Search\"\n              margin=\"dense\"\n              fullWidth\n              onChange={e => setSearch(toLower(e.target.value))}\n            />\n            <div className=\"search-res\">\n              {filteredCookies.length === 0 ? (\n                <span>No Cookies</span>\n              ) : (\n                <span>\n                  <span>{filteredCookies.length}</span>\n                  <span className=\"opacity-50\">\n                    {' '}\n                    {filteredCookies.length === 1 ? 'cookie' : 'cookies'}\n                  </span>\n                </span>\n              )}\n            </div>\n          </Grid>\n        </div>\n      )}\n      {!isEmpty(mappedCookies) && !(cookies.length === 1) && <Divider />}\n      {mappedCookies}\n    </Grid>\n  );\n};\n\nexport default DomainDetails;\n","import React from 'react';\n\n// Material UI\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\n// Types\nimport {\n  TypeCookiesState,\n  TypeExtendedCookie,\n  TypeCookieState,\n} from 'types/GlobalTypes';\n\n// Components\nimport DomainDetails from 'components/Cookies/List/DomainDetails';\nimport { useDomainStyles } from 'components/Styles';\n\ntype DomainsProps = {\n  domains: TypeCookiesState;\n  deleteCookie: (cookie: TypeExtendedCookie) => Promise<void>;\n  clearAllDomainCookies: (domainCookie: TypeCookieState) => void;\n};\nconst Domains: React.FC<DomainsProps> = ({\n  domains,\n  deleteCookie,\n  clearAllDomainCookies,\n}) => {\n  const classes = useDomainStyles({});\n\n  return (\n    <>\n      {domains.map(cookie => {\n        const totalCookies = cookie.cookies.length;\n        return (\n          <ExpansionPanel\n            key={cookie.domain}\n            TransitionProps={{ unmountOnExit: true }}\n          >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <div className={classes.columnPrimary}>\n                <Typography className={classes.heading}>\n                  {cookie.domain}\n                </Typography>\n              </div>\n              {totalCookies !== 0 && (\n                <>\n                  <div className={classes.columnSecondary}>\n                    <Typography className={classes.secondaryHeading}>\n                      {totalCookies === 1\n                        ? `${totalCookies} cookie`\n                        : `${totalCookies} cookies`}{' '}\n                    </Typography>\n                  </div>\n                  <div className={classes.columnSecondary}>\n                    <Typography className={classes.secondaryHeading}>\n                      <span className={classes.secondaryHeadingSize}>\n                        ( {cookie.formatedSize} )\n                      </span>\n                    </Typography>\n                  </div>\n                </>\n              )}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.details}>\n              <DomainDetails cookie={cookie} deleteCookie={deleteCookie} />\n            </ExpansionPanelDetails>\n            <Divider />\n            <ExpansionPanelActions>\n              <Button\n                size=\"small\"\n                onClick={() => clearAllDomainCookies(cookie)}\n              >\n                Clear All\n              </Button>\n            </ExpansionPanelActions>\n          </ExpansionPanel>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Domains;\n","import React, { useCallback, useContext } from 'react';\n\n// Polyfill\nimport { browser } from 'webextension-polyfill-ts';\n\n// Types\nimport {\n  TypeCookieState,\n  TypeExtendedCookie,\n  TypeCookiesState,\n} from 'types/GlobalTypes';\n\n// Helpers\nimport { isEmpty, groupBy } from 'ramda';\nimport {\n  getAllCookies,\n  getCurrentUrlFromTab,\n  getCurrentDomainFromUrl,\n} from 'helpers/CookieHelper';\n\n// Components\nimport NoCookies from 'components/Cookies/NoCookies';\nimport Overview from 'components/Cookies/CookiesOverview';\nimport EditCookie from 'components/Cookies/EditCookie';\nimport { StoreContext } from 'store/GlobalStore';\nimport Domains from './Domains';\nimport Divider from 'components/Divider';\nimport { useDomainGroupsStyles } from 'components/Styles';\n\nconst MainScreen = () => {\n  const classes = useDomainGroupsStyles({});\n  const { state: globalStore, setState: setGlobalStore } = useContext(\n    StoreContext\n  );\n\n  const clearAllDomainCookies = useCallback(\n    async (domainCookie: TypeCookieState) => {\n      for (let cookie of domainCookie.cookies) {\n        await browser.cookies.remove({\n          url: 'https://' + cookie.domain + cookie.path,\n          name: cookie.name,\n        });\n      }\n    },\n    []\n  );\n\n  const clearAllCookies = useCallback(async () => {\n    const allCookies = (await getAllCookies())\n      .map(c => c.cookies)\n      .reduce((prev, next) => [...prev, ...next], []);\n\n    for (let cookie of allCookies) {\n      await browser.cookies.remove({\n        url: 'https://' + cookie.domain + cookie.path,\n        name: cookie.name,\n      });\n    }\n  }, []);\n\n  const deleteCookie = useCallback(async (cookie: TypeExtendedCookie) => {\n    browser.cookies.remove({\n      url: 'https://' + cookie.domain + cookie.path,\n      name: cookie.name,\n    });\n  }, []);\n\n  if (globalStore.loading) return null;\n\n  const currentUrl = getCurrentUrlFromTab(globalStore.currentTab?.url);\n  const currentDomain = getCurrentDomainFromUrl(globalStore.currentTab?.url);\n\n  // @ts-ignore\n  const groupedDomains: {\n    current: TypeCookiesState;\n    main: TypeCookiesState;\n    others: TypeCookiesState;\n  } = groupBy((domainCookie: TypeCookieState):\n    | 'current'\n    | 'main'\n    | 'others' => {\n    if (\n      domainCookie.domain === currentDomain ||\n      domainCookie.domain === `.${currentDomain}` ||\n      domainCookie.domain === `www.${currentDomain}` ||\n      domainCookie.domain === `.www.${currentDomain}`\n    )\n      return 'main';\n    else if (\n      domainCookie.domain === currentUrl ||\n      domainCookie.domain === `.${currentUrl}`\n    )\n      return 'current';\n    return 'others';\n  }, globalStore.domainCookies);\n\n  const showGroups =\n    currentUrl &&\n    globalStore.domainCookies.length > 1 &&\n    (groupedDomains?.others || []).length >= 1;\n\n  const itemsOrEmptyArray = (list: TypeCookiesState | null | undefined) =>\n    list || [];\n\n  return (\n    <div>\n      {globalStore.cookie || globalStore.newCookie ? (\n        <EditCookie />\n      ) : isEmpty(globalStore.domainCookies) && !globalStore.loading ? (\n        <NoCookies newCookie={setGlobalStore.newCookie} />\n      ) : (\n        <div>\n          <Overview\n            cookies={globalStore.domainCookies}\n            clearAllCookies={clearAllCookies}\n            newCookie={setGlobalStore.newCookie}\n          />\n          {!showGroups ? (\n            <Domains\n              domains={globalStore.domainCookies}\n              deleteCookie={deleteCookie}\n              clearAllDomainCookies={clearAllDomainCookies}\n            />\n          ) : (\n            <div>\n              {itemsOrEmptyArray(groupedDomains?.current).length >= 1 && (\n                <>\n                  <div className={classes.heading}>\n                    Current{' '}\n                    {(currentUrl || '')?.split('.').length === 2\n                      ? 'domain'\n                      : 'sub-domain'}\n                  </div>\n                  <Domains\n                    domains={groupedDomains?.current || []}\n                    deleteCookie={deleteCookie}\n                    clearAllDomainCookies={clearAllDomainCookies}\n                  />\n                </>\n              )}\n              {itemsOrEmptyArray(groupedDomains?.main).length >= 1 && (\n                <>\n                  {itemsOrEmptyArray(groupedDomains?.current).length >= 1 && (\n                    <Divider />\n                  )}\n                  <div className={classes.heading}>\n                    Domain ( {groupedDomains.main.length} )\n                  </div>\n                  <Domains\n                    domains={groupedDomains.main}\n                    deleteCookie={deleteCookie}\n                    clearAllDomainCookies={clearAllDomainCookies}\n                  />\n                </>\n              )}\n              {itemsOrEmptyArray(groupedDomains?.others).length >= 1 && (\n                <>\n                  <Divider />\n                  <div className={classes.heading}>\n                    Others ( {groupedDomains.others.length} )\n                  </div>\n                  <Domains\n                    domains={groupedDomains.others}\n                    deleteCookie={deleteCookie}\n                    clearAllDomainCookies={clearAllDomainCookies}\n                  />\n                </>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MainScreen;\n"],"sourceRoot":""}